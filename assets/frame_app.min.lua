local a={10,25,50,100}local b={'SPOT','CENTER_WEIGHTED','AVERAGE'}local c={}local d={}local e={}BATTERY_LEVEL_FLAG=0x0c;IMAGE_CHUNK_FLAG=0x07;TAKE_PHOTO_FLAG=0x0d;function update_app_data_accum(f)local g=string.byte(f,1)local h=c[g]if h==nil or next(h)==nil then h={chunk_table={},num_chunks=0,size=0,recv_bytes=0}c[g]=h end;if h.num_chunks==0 then h.size=string.byte(f,2)<<8|string.byte(f,3)h.chunk_table[1]=string.sub(f,4)h.num_chunks=1;h.recv_bytes=string.len(f)-3;if h.recv_bytes==h.size then d[g]=h.chunk_table[1]h.size=0;h.recv_bytes=0;h.num_chunks=0;h.chunk_table[1]=nil;c[g]=h end else h.chunk_table[h.num_chunks+1]=string.sub(f,2)h.num_chunks=h.num_chunks+1;h.recv_bytes=h.recv_bytes+string.len(f)-1;if h.recv_bytes==h.size then d[g]=table.concat(h.chunk_table)for i,j in pairs(h.chunk_table)do h.chunk_table[i]=nil end;h.size=0;h.recv_bytes=0;h.num_chunks=0;c[g]=h end end end;function parse_take_photo(f)local k={}k.quality=a[string.byte(f,2)+1]k.auto_exp_gain_times=string.byte(f,3)k.metering_mode=b[string.byte(f,4)+1]k.exposure=(string.byte(f,5)-128)/64.0;k.shutter_kp=string.byte(f,6)/10.0;k.shutter_limit=string.byte(f,7)<<8|string.byte(f,8)k.gain_kp=string.byte(f,9)/10.0;k.gain_limit=string.byte(f,10)return k end;local l={}l[TAKE_PHOTO_FLAG]=parse_take_photo;function process_raw_items()local m=0;for n,o in pairs(d)do e[n]=l[n](o)d[n]=nil;m=m+1 end;return m end;function camera_capture_and_send(p)quality=p.quality or 50;auto_exp_gain_times=p.auto_exp_gain_times or 0;metering_mode=p.metering_mode or'SPOT'exposure=p.exposure or 0;shutter_kp=p.shutter_kp or 0.1;shutter_limit=p.shutter_limit or 6000;gain_kp=p.gain_kp or 1.0;gain_limit=p.gain_limit or 248.0;for q=1,auto_exp_gain_times,1 do frame.camera.auto{metering=metering_mode,exposure=exposure,shutter_kp=shutter_kp,shutter_limit=shutter_limit,gain_kp=gain_kp,gain_limit=gain_limit}frame.sleep(0.1)end;frame.camera.capture{quality_factor=quality}local r=true;local s=0;local t=0;local s=0;local u=-1;repeat frame.sleep(0.1)u=s;s=frame.fpga.read(0x21,2)until s==u and s~=0;local f=''while true do if r then r=false;f=frame.camera.read_raw(frame.bluetooth.max_length()-6)if f~=nil then pcall(frame.bluetooth.send,string.char(IMAGE_CHUNK_FLAG)..string.char(string.byte(s,1))..string.char(string.byte(s,2))..f)t=t+string.len(f)frame.sleep(0.01)end else f=frame.camera.read_raw(frame.bluetooth.max_length()-4)if f==nil then break else pcall(frame.bluetooth.send,string.char(IMAGE_CHUNK_FLAG)..f)t=t+string.len(f)frame.sleep(0.01)end end end end;function send_batt_if_elapsed(v,w)local x=frame.time.utc()if v==0 or x-v>w then pcall(frame.bluetooth.send,string.char(BATTERY_LEVEL_FLAG)..string.char(math.floor(frame.battery_level())))return x else return v end end;function app_loop()local y=0;while true do local z=process_raw_items()frame.sleep(0.005)if z>0 then if e[TAKE_PHOTO_FLAG]~=nil then rc,err=pcall(camera_capture_and_send,e)if rc==false then print(err)end end end;y=send_batt_if_elapsed(y,120)frame.sleep(0.1)end end;frame.bluetooth.receive_callback(update_app_data_accum)app_loop()