BATTERY_MSG=0x0c;local a={}local b={}local c={}function update_app_data_accum(d)local e=string.byte(d,1)local f=a[e]if f==nil or next(f)==nil then f={chunk_table={},num_chunks=0,size=0,recv_bytes=0}a[e]=f end;if f.num_chunks==0 then f.size=string.byte(d,2)<<8|string.byte(d,3)f.chunk_table[1]=string.sub(d,4)f.num_chunks=1;f.recv_bytes=string.len(d)-3;if f.recv_bytes==f.size then b[e]=f.chunk_table[1]f.size=0;f.recv_bytes=0;f.num_chunks=0;f.chunk_table[1]=nil;a[e]=f end else f.chunk_table[f.num_chunks+1]=string.sub(d,2)f.num_chunks=f.num_chunks+1;f.recv_bytes=f.recv_bytes+string.len(d)-1;if f.recv_bytes==f.size then b[e]=table.concat(f.chunk_table)for g,h in pairs(f.chunk_table)do f.chunk_table[g]=nil end;f.size=0;f.recv_bytes=0;f.num_chunks=0;a[e]=f end end end;frame.bluetooth.receive_callback(update_app_data_accum)local i={}function process_raw_items()local j=0;for k,l in pairs(b)do c[k]=i[k](l)b[k]=nil;j=j+1 end;return j end;function send_batt_if_elapsed(m,n)local o=frame.time.utc()if m==0 or o-m>n then pcall(frame.bluetooth.send,string.char(BATTERY_MSG)..string.char(math.floor(frame.battery_level())))return o else return m end end