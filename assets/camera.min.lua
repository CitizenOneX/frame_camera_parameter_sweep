_M={}local a=0x07;function _M.camera_capture_and_send(b)quality=b.quality or 50;auto_exp_gain_times=b.auto_exp_gain_times or 0;metering_mode=b.metering_mode or'SPOT'exposure=b.exposure or 0;shutter_kp=b.shutter_kp or 0.1;shutter_limit=b.shutter_limit or 6000;gain_kp=b.gain_kp or 1.0;gain_limit=b.gain_limit or 248.0;for c=1,auto_exp_gain_times,1 do frame.camera.auto{metering=metering_mode,exposure=exposure,shutter_kp=shutter_kp,shutter_limit=shutter_limit,gain_kp=gain_kp,gain_limit=gain_limit}frame.sleep(0.1)end;frame.camera.capture{quality_factor=quality}local d=true;local e=0;local f=0;local e=0;local g=-1;repeat frame.sleep(0.1)g=e;e=frame.fpga.read(0x21,2)until e==g and e~=0;local h=''while true do if d then d=false;h=frame.camera.read_raw(frame.bluetooth.max_length()-6)if h~=nil then pcall(frame.bluetooth.send,string.char(a)..string.char(string.byte(e,1))..string.char(string.byte(e,2))..h)f=f+string.len(h)frame.sleep(0.015)end else h=frame.camera.read_raw(frame.bluetooth.max_length()-4)if h==nil then break else pcall(frame.bluetooth.send,string.char(a)..h)f=f+string.len(h)frame.sleep(0.015)end end end end;return _M